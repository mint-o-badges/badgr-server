# A dockerized badgr-server stack to emulate a production build
version: "3.9"
services:
  change-ownership:
    image: alpine
    user: root
    group_add:
      - "999"
    volumes:
      - badgr_server_api_sock:/badgr_server/sock
      - badgr_server_staticfiles:/badgr_server/staticfiles
      - badgr_server_mediafiles:/badgr_server/mediafiles
      - ./.git:/badgr_server/.git
    command: chown -R 999:999 /badgr_server/sock /badgr_server/staticfiles /badgr_server/mediafiles

  # this container copies in the project code and runs the app with uwsgi
  api:
    build:
      context: .
      dockerfile: .docker/Dockerfile.prod.api
    depends_on:
      db:
        condition: service_started
      memcached:
        condition: service_started
      redis:
        condition: service_started
      celery_worker:
        condition: service_started
    volumes:
      - badgr_server_api_sock:/badgr_server/sock
      - badgr_server_mediafiles:/badgr_server/mediafiles
      - badgr_server_staticfiles:/badgr_server/staticfiles
    networks:
      - badgr
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  # this container runs memcached
  memcached:
    image: "bitnami/memcached:latest"
    expose:
      - "11211"
    networks:
      - badgr

  # this container runs mysql (database)
  db:
    image: mysql:5.7.31
    volumes:
      - badgr_server_prod_db:/var/lib/mysql:rw
      - ./.docker/etc/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - "MYSQL_PASSWORD=password"
      - "MYSQL_HOST=db"
      - "MYSQL_ROOT_PASSWORD=password"
    expose:
      - "3306"
    networks:
      - badgr

  # this container runs nginx (webserver) and uses the uwsgi app.sock file from prod_api via a volume
  nginx:
    image: nginx:1.26.2
    group_add:
      - "999"
    volumes:
      - ./.docker/config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./.docker/config/nginx/sites-available:/etc/nginx/sites-available
      - badgr_server_api_sock:/sock
      - badgr_server_mediafiles:/mediafiles
      - badgr_server_staticfiles:/staticfiles
    depends_on:
      - "api"
    networks:
      - badgr
    ports:
      - "8080:80"

  celery_worker:
    build:
      context: .
      dockerfile: .docker/Dockerfile.prod.api
    entrypoint: [] # Override the entrypoint from Dockerfile
    user: "999:999"
    command: >
      bash -c "PYTHONPATH=/badgr_server/apps celery -A mainsite worker --loglevel=info"
    volumes:
      - badgr_server_mediafiles:/badgr_server/mediafiles
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - "MYSQL_PASSWORD=password"
      - "MYSQL_HOST=db"
      - "MYSQL_ROOT_PASSWORD=password"
    networks:
      - badgr
    depends_on:
      - redis

  redis:
    image: redis:latest
    restart: unless-stopped
    networks:
      - badgr

networks:
  badgr:
    driver: bridge

volumes:
  badgr_server_api_sock:
  badgr_server_mediafiles:
  badgr_server_staticfiles:
  badgr_server_prod_db:
