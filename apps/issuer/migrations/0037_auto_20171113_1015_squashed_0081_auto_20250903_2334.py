# Generated by Django 3.2 on 2025-09-04 06:57

from django.conf import settings
from django.db import migrations, models
from django.core import management
import django.db.migrations.operations.special
import django.db.models.deletion
import django.utils.timezone
import issuer.models
import issuer.utils
import jsonfield.fields
import mainsite.mixins


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# issuer.migrations.0048_auto_20190812_1229
# issuer.migrations.0074_badgeinstance_ob_json_2_0
# issuer.migrations.0078_learningpath_required_badges_count_squashed_0079_learningpath_activated


def nullify_blanks(apps, schema_editor):
    Issuer = apps.get_model("issuer", "Issuer")
    Issuer.objects.filter(source_url="").update(source_url=None)


def badgeinstance_generate_ob2_json(apps, schema):
    # try to populate during migration
    try:
        print("\n  running command issuer:populate_badgeinstance_ob_json_2_0...")
        management.call_command("populate_badgeinstance_ob_json_2_0")
    except Exception:
        pass


def set_required_badges_count(apps, schema_editor):
    for lp in issuer.models.LearningPath.objects.all():
        badge_count = issuer.models.LearningPathBadge.objects.filter(
            learning_path=lp
        ).count()
        lp.required_badges_count = badge_count
        lp.save()


class Migration(migrations.Migration):
    replaces = [
        ("issuer", "0037_auto_20171113_1015"),
        ("issuer", "0038_badgeinstance_expires_at"),
        ("issuer", "0039_badgeclassextension"),
        ("issuer", "0040_badgeinstanceextension_issuerextension"),
        ("issuer", "0041_badgeinstancebakedimage"),
        ("issuer", "0042_auto_20180220_1150"),
        ("issuer", "0043_auto_20180614_0949"),
        ("issuer", "0044_auto_20180713_0658"),
        ("issuer", "0045_auto_20181104_1847"),
        ("issuer", "0046_auto_20181114_1517"),
        ("issuer", "0047_badgeinstance_user"),
        ("issuer", "0048_auto_20190812_1229"),
        ("issuer", "0049_auto_20190812_1232"),
        ("issuer", "0050_auto_20190813_1945"),
        ("issuer", "0051_auto_20190826_1604"),
        ("issuer", "0052_auto_20200106_1621"),
        ("issuer", "0053_auto_20200608_0452"),
        ("issuer", "0054_auto_20200724_1317"),
        ("issuer", "0055_auto_20200817_1538"),
        ("issuer", "0056_auto_20200817_1352"),
        ("issuer", "0057_add_image_preview"),
        ("issuer", "0058_auto_20210302_1103"),
        ("issuer", "0059_remove_issuer_image_preview"),
        ("issuer", "0060_issuer_verified"),
        ("issuer", "0061_auto_20211118_0923"),
        ("issuer", "0062_issuer_category"),
        ("issuer", "0063_auto_20211122_0622"),
        ("issuer", "0064_auto_20211122_0929"),
        ("issuer", "0065_badgeclass_imageframe"),
        ("issuer", "0066_qrcode_requestedbadge"),
        (
            "issuer",
            "0067_learningpath_learningpathbadge_learningpathparticipant_learningpathtag_requestedlearningpath",
        ),
        ("issuer", "0068_issuer_intendeduseverified"),
        ("issuer", "0069_delete_learningpathparticipant"),
        ("issuer", "0070_badgeclass_copy_permissions"),
        ("issuer", "0071_qrcode_notifications"),
        ("issuer", "0071_issuerstaffrequest"),
        ("issuer", "0072_merge_20250407_1526"),
        ("issuer", "0073_auto_20250408_1502"),
        ("issuer", "0074_badgeinstance_ob_json_2_0"),
        ("issuer", "0075_importedbadgeassertion_importedbadgeassertionextension"),
        ("issuer", "0076_badgeclass_criteria"),
        ("issuer", "0077_auto_20250513_1031"),
        (
            "issuer",
            "0078_learningpath_required_badges_count_squashed_0079_learningpath_activated",
        ),
        ("issuer", "0079_alter_learningpath_activated"),
        ("issuer", "0080_auto_20250824_2314"),
        ("issuer", "0081_auto_20250903_2334"),
    ]

    dependencies = [
        ("mainsite", "0024_auto_20200608_0452"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("mainsite", "0026_iframeurl"),
        ("issuer", "0036_merge_20171101_0815"),
    ]

    operations = [
        migrations.AlterField(
            model_name="badgeinstance",
            name="recipient_identifier",
            field=models.EmailField(db_index=True, max_length=320),
        ),
        migrations.AddField(
            model_name="badgeinstance",
            name="expires_at",
            field=models.DateTimeField(blank=True, default=None, null=True),
        ),
        migrations.CreateModel(
            name="BadgeClassExtension",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=254)),
                (
                    "original_json",
                    models.TextField(blank=True, default=None, null=True),
                ),
                (
                    "badgeclass",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="issuer.badgeclass",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BadgeInstanceExtension",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=254)),
                (
                    "original_json",
                    models.TextField(blank=True, default=None, null=True),
                ),
                (
                    "badgeinstance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="issuer.badgeinstance",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="IssuerExtension",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=254)),
                (
                    "original_json",
                    models.TextField(blank=True, default=None, null=True),
                ),
                (
                    "issuer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="issuer.issuer"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BadgeInstanceBakedImage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("obi_version", models.CharField(max_length=254)),
                (
                    "image",
                    models.FileField(
                        blank=True,
                        upload_to=issuer.models._baked_badge_instance_filename_generator,
                    ),
                ),
                (
                    "badgeinstance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="issuer.badgeinstance",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AlterField(
            model_name="badgeinstanceevidence",
            name="evidence_url",
            field=models.CharField(
                blank=True, default=None, max_length=2083, null=True
            ),
        ),
        migrations.AlterField(
            model_name="badgeinstance",
            name="recipient_identifier",
            field=models.EmailField(db_index=True, max_length=320),
        ),
        migrations.AlterIndexTogether(
            name="badgeinstance",
            index_together={("recipient_identifier", "badgeclass", "revoked")},
        ),
        migrations.AlterField(
            model_name="badgeinstance",
            name="recipient_identifier",
            field=models.EmailField(db_index=True, max_length=320),
        ),
        migrations.AddField(
            model_name="badgeclass",
            name="expires_amount",
            field=models.IntegerField(blank=True, default=None, null=True),
        ),
        migrations.AddField(
            model_name="badgeclass",
            name="expires_duration",
            field=models.CharField(
                blank=True,
                choices=[
                    ("days", "Days"),
                    ("weeks", "Weeks"),
                    ("months", "Months"),
                    ("years", "Years"),
                ],
                default=None,
                max_length=254,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="badgeclass",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name="badgeinstance",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name="issuer",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AddField(
            model_name="badgeinstance",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.RunPython(
            code=nullify_blanks,
        ),
        migrations.AlterField(
            model_name="issuer",
            name="source_url",
            field=models.CharField(
                blank=True, default=None, max_length=254, null=True, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="badgeclass",
            name="source_url",
            field=models.CharField(
                blank=True, default=None, max_length=254, null=True, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="badgeinstance",
            name="source_url",
            field=models.CharField(
                blank=True, default=None, max_length=254, null=True, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="badgeinstance",
            name="recipient_identifier",
            field=models.CharField(db_index=True, max_length=320),
        ),
        migrations.AlterField(
            model_name="badgeclass",
            name="updated_at",
            field=models.DateTimeField(auto_now=True, db_index=True),
        ),
        migrations.AlterField(
            model_name="badgeinstance",
            name="updated_at",
            field=models.DateTimeField(auto_now=True, db_index=True),
        ),
        migrations.AlterField(
            model_name="issuer",
            name="updated_at",
            field=models.DateTimeField(auto_now=True, db_index=True),
        ),
        migrations.AlterField(
            model_name="badgeclass",
            name="image",
            field=models.FileField(blank=True, upload_to="uploads/badges"),
        ),
        migrations.AlterField(
            model_name="badgeinstance",
            name="acceptance",
            field=models.CharField(
                choices=[
                    ("Unaccepted", "Unaccepted"),
                    ("Accepted", "Accepted"),
                    ("Rejected", "Rejected"),
                ],
                default="Unaccepted",
                max_length=254,
            ),
        ),
        migrations.AlterField(
            model_name="badgeinstance",
            name="image",
            field=models.FileField(blank=True, upload_to="uploads/badges"),
        ),
        migrations.AlterField(
            model_name="issuer",
            name="badgrapp",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="mainsite.badgrapp",
            ),
        ),
        migrations.AlterField(
            model_name="issuer",
            name="image",
            field=models.FileField(blank=True, null=True, upload_to="uploads/issuers"),
        ),
        migrations.AlterField(
            model_name="badgeinstance",
            name="revoked",
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AlterField(
            model_name="badgeclass",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="badgeclass",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="badgeinstance",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="badgeinstance",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="issuer",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="issuer",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="badgeclass",
            name="image_hash",
            field=models.CharField(blank=True, default="", max_length=72),
        ),
        migrations.AddField(
            model_name="badgeclass",
            name="image_preview",
            field=models.FileField(blank=True, null=True, upload_to="uploads/badges"),
        ),
        migrations.AlterField(
            model_name="badgeclass",
            name="slug",
            field=models.CharField(
                blank=True, db_index=True, default=None, max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="badgeinstance",
            name="slug",
            field=models.CharField(
                blank=True, db_index=True, default=None, max_length=255, null=True
            ),
        ),
        migrations.AlterField(
            model_name="issuer",
            name="slug",
            field=models.CharField(
                blank=True, db_index=True, default=None, max_length=255, null=True
            ),
        ),
        migrations.AddField(
            model_name="issuer",
            name="verified",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="issuer",
            name="category",
            field=models.CharField(default="n/a", max_length=255),
        ),
        migrations.AddField(
            model_name="issuer",
            name="city",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="issuer",
            name="country",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="issuer",
            name="street",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="issuer",
            name="streetnumber",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="issuer",
            name="zip",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="issuer",
            name="lat",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="issuer",
            name="lon",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="badgeclass",
            name="imageFrame",
            field=models.BooleanField(default=True),
        ),
        migrations.CreateModel(
            name="QrCode",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("entity_version", models.PositiveIntegerField(default=1)),
                (
                    "entity_id",
                    models.CharField(default=None, max_length=254, unique=True),
                ),
                ("title", models.CharField(max_length=254)),
                ("createdBy", models.CharField(max_length=254)),
                (
                    "valid_from",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                (
                    "expires_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                (
                    "badgeclass",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="qrcodes",
                        to="issuer.badgeclass",
                    ),
                ),
                (
                    "issuer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="issuer.issuer"
                    ),
                ),
                ("notifications", models.BooleanField(default=False)),
                (
                    "created_by_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RequestedBadge",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("entity_version", models.PositiveIntegerField(default=1)),
                (
                    "entity_id",
                    models.CharField(default=None, max_length=254, unique=True),
                ),
                ("firstName", models.CharField(max_length=254)),
                ("lastName", models.CharField(max_length=254)),
                ("email", models.CharField(blank=True, max_length=254, null=True)),
                (
                    "requestedOn",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("status", models.CharField(default="Pending", max_length=254)),
                (
                    "badgeclass",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requestedbadges",
                        to="issuer.badgeclass",
                    ),
                ),
                (
                    "qrcode",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requestedbadges",
                        to="issuer.qrcode",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LearningPath",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("entity_version", models.PositiveIntegerField(default=1)),
                (
                    "entity_id",
                    models.CharField(default=None, max_length=254, unique=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                ("name", models.CharField(max_length=254)),
                ("description", models.TextField(blank=True, default=None, null=True)),
                (
                    "slug",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        default=None,
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "badgrapp",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="mainsite.badgrapp",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "issuer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="learningpaths",
                        to="issuer.issuer",
                    ),
                ),
                (
                    "participationBadge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="issuer.badgeclass",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RequestedLearningPath",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("entity_version", models.PositiveIntegerField(default=1)),
                (
                    "entity_id",
                    models.CharField(default=None, max_length=254, unique=True),
                ),
                (
                    "requestedOn",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("status", models.CharField(default="Pending", max_length=254)),
                (
                    "learningpath",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requested_learningpath",
                        to="issuer.learningpath",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LearningPathTag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=254)),
                (
                    "learningPath",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="issuer.learningpath",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LearningPathBadge",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveIntegerField()),
                (
                    "badge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="issuer.badgeclass",
                    ),
                ),
                (
                    "learning_path",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="issuer.learningpath",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="issuer",
            name="intendedUseVerified",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="badgeclass",
            name="copy_permissions",
            field=models.PositiveSmallIntegerField(default=1),
        ),
        migrations.CreateModel(
            name="IssuerStaffRequest",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("entity_version", models.PositiveIntegerField(default=1)),
                (
                    "entity_id",
                    models.CharField(default=None, max_length=254, unique=True),
                ),
                (
                    "requestedOn",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Approved", "Approved"),
                            ("Rejected", "Rejected"),
                            ("Revoked", "Revoked"),
                        ],
                        default="Pending",
                        max_length=254,
                    ),
                ),
                ("revoked", models.BooleanField(db_index=True, default=False)),
                (
                    "issuer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="staffrequests",
                        to="issuer.issuer",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="badgeinstance",
            name="ob_json_2_0",
            field=models.TextField(blank=True, default=None, null=True),
        ),
        migrations.RunPython(
            code=badgeinstance_generate_ob2_json,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.CreateModel(
            name="ImportedBadgeAssertion",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("entity_version", models.PositiveIntegerField(default=1)),
                (
                    "entity_id",
                    models.CharField(default=None, max_length=254, unique=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                ("source", models.CharField(default="local", max_length=254)),
                (
                    "source_url",
                    models.CharField(
                        blank=True, default=None, max_length=254, null=True, unique=True
                    ),
                ),
                ("badge_name", models.CharField(max_length=255)),
                ("badge_description", models.TextField(blank=True, null=True)),
                ("badge_criteria_url", models.URLField(blank=True, null=True)),
                ("badge_image_url", models.URLField(blank=True, null=True)),
                ("image", models.FileField(blank=True, upload_to="uploads/badges")),
                ("issuer_name", models.CharField(max_length=255)),
                ("issuer_url", models.URLField()),
                (
                    "issuer_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("issuer_image_url", models.URLField(blank=True, null=True)),
                ("issued_on", models.DateTimeField()),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "recipient_identifier",
                    models.CharField(db_index=True, max_length=320),
                ),
                (
                    "recipient_type",
                    models.CharField(
                        choices=[
                            ("email", "email"),
                            ("openBadgeId", "openBadgeId"),
                            ("telephone", "telephone"),
                            ("url", "url"),
                        ],
                        default="email",
                        max_length=255,
                    ),
                ),
                (
                    "acceptance",
                    models.CharField(
                        choices=[
                            ("Unaccepted", "Unaccepted"),
                            ("Accepted", "Accepted"),
                            ("Rejected", "Rejected"),
                        ],
                        default="Accepted",
                        max_length=254,
                    ),
                ),
                ("revoked", models.BooleanField(default=False)),
                (
                    "revocation_reason",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("original_json", jsonfield.fields.JSONField()),
                ("hashed", models.BooleanField(default=True)),
                (
                    "salt",
                    models.CharField(
                        blank=True, default=None, max_length=254, null=True
                    ),
                ),
                ("narrative", models.TextField(blank=True, null=True)),
                ("verification_url", models.URLField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Imported Badge Assertion",
            },
        ),
        migrations.CreateModel(
            name="ImportedBadgeAssertionExtension",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=254)),
                (
                    "original_json",
                    models.TextField(blank=True, default=None, null=True),
                ),
                (
                    "importedBadge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="issuer.importedbadgeassertion",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="badgeclass",
            name="criteria",
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="badgeinstance",
            name="ob_json_3_0",
            field=models.TextField(blank=True, default=None, null=True),
        ),
        migrations.AddField(
            model_name="issuer",
            name="private_key",
            field=models.CharField(
                blank=True,
                default=issuer.utils.generate_private_key_pem,
                max_length=512,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="learningpath",
            name="required_badges_count",
            field=models.PositiveIntegerField(default=3),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="learningpath",
            name="activated",
            field=models.BooleanField(default=True),
        ),
        migrations.RunPython(
            code=set_required_badges_count,
        ),
        migrations.AlterField(
            model_name="learningpath",
            name="activated",
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name="Network",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("entity_version", models.PositiveIntegerField(default=1)),
                (
                    "entity_id",
                    models.CharField(default=None, max_length=254, unique=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "original_json",
                    models.TextField(blank=True, default=None, null=True),
                ),
                ("source", models.CharField(default="local", max_length=254)),
                (
                    "source_url",
                    models.CharField(
                        blank=True, default=None, max_length=254, null=True, unique=True
                    ),
                ),
                (
                    "slug",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        default=None,
                        max_length=255,
                        null=True,
                    ),
                ),
                ("name", models.CharField(max_length=1024)),
                (
                    "image",
                    models.FileField(
                        blank=True, null=True, upload_to="uploads/issuers"
                    ),
                ),
                ("description", models.TextField(blank=True, default=None, null=True)),
                (
                    "url",
                    models.CharField(
                        blank=True, default=None, max_length=254, null=True
                    ),
                ),
                ("country", models.CharField(blank=True, max_length=254, null=True)),
                (
                    "private_key",
                    models.CharField(
                        blank=True,
                        default=issuer.utils.generate_private_key_pem,
                        max_length=512,
                        null=True,
                    ),
                ),
                ("state", models.CharField(blank=True, max_length=254, null=True)),
                (
                    "badgrapp",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="mainsite.badgrapp",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(
                mainsite.mixins.ResizeUploadedImage,
                mainsite.mixins.ScrubUploadedSvgImage,
                mainsite.mixins.PngImagePreview,
                models.Model,
            ),
        ),
        migrations.AlterField(
            model_name="issuer",
            name="country",
            field=models.CharField(blank=True, max_length=254, null=True),
        ),
        migrations.CreateModel(
            name="NetworkStaff",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("owner", "Owner"),
                            ("editor", "Editor"),
                            ("staff", "Staff"),
                        ],
                        default="staff",
                        max_length=254,
                    ),
                ),
                (
                    "network",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="issuer.network"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("network", "user")},
            },
        ),
        migrations.CreateModel(
            name="NetworkInvite",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("entity_version", models.PositiveIntegerField(default=1)),
                (
                    "entity_id",
                    models.CharField(default=None, max_length=254, unique=True),
                ),
                ("invitedOn", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "acceptedOn",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Approved", "Approved"),
                            ("Rejected", "Rejected"),
                            ("Revoked", "Revoked"),
                        ],
                        default="Pending",
                        max_length=254,
                    ),
                ),
                ("revoked", models.BooleanField(db_index=True, default=False)),
                (
                    "issuer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="issuer.issuer",
                    ),
                ),
                (
                    "network",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invites",
                        to="issuer.network",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NetworkExtension",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=254)),
                (
                    "original_json",
                    models.TextField(blank=True, default=None, null=True),
                ),
                (
                    "network",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="issuer.network"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="network",
            name="partner_issuers",
            field=models.ManyToManyField(
                blank=True, related_name="networks", to="issuer.Issuer"
            ),
        ),
        migrations.AddField(
            model_name="network",
            name="staff",
            field=models.ManyToManyField(
                through="issuer.NetworkStaff", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="network",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="badgeinstance",
            name="recipient_identifier",
            field=models.CharField(db_index=True, max_length=320),
        ),
        migrations.AlterField(
            model_name="importedbadgeassertion",
            name="recipient_identifier",
            field=models.CharField(db_index=True, max_length=320),
        ),
    ]
